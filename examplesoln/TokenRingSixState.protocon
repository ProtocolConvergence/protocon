
// Verified up to N=25

constant N := 4;
constant M := 3;

direct variable t[Nat % N] <- Nat % 2;
puppet variable x[Nat % N] <- Nat % M;

process Bot[i <- Nat % 1]
{
  read: t[i-1];
  read: x[i-1];
  write: t[i];
  write: x[i];
  shadow action:
    ( t[i-1]==t[i] --> t[i]:=1-t[i-1]; )
    ;
  puppet action:
    ( t[i-1]==0 && x[i-1]==0 && t[i]==0 && x[i]==0 --> t[i]:=0; x[i]:=2; )
    ( t[i-1]==0 && x[i-1]==0 && t[i]==1 && x[i]==0 --> t[i]:=1; x[i]:=2; )
    ( t[i-1]==0 && x[i-1]==0 && t[i]==1 && x[i]==1 --> t[i]:=1; x[i]:=2; )
    ( t[i-1]==0 && x[i-1]==1 && t[i]==0 && x[i]==0 --> t[i]:=0; x[i]:=2; )
    ( t[i-1]==0 && x[i-1]==1 && t[i]==0 && x[i]==1 --> t[i]:=1; x[i]:=2; )
    ( t[i-1]==0 && x[i-1]==1 && t[i]==1 && x[i]==0 --> t[i]:=1; x[i]:=2; )
    ( t[i-1]==0 && x[i-1]==1 && t[i]==1 && x[i]==1 --> t[i]:=1; x[i]:=2; )
    ( t[i-1]==0 && x[i-1]==2 && t[i]==0 && x[i]==0 --> t[i]:=1; x[i]:=0; )
    ( t[i-1]==0 && x[i-1]==2 && t[i]==0 && x[i]==1 --> t[i]:=1; x[i]:=1; )
    ( t[i-1]==0 && x[i-1]==2 && t[i]==0 && x[i]==2 --> t[i]:=1; x[i]:=0; )
    ( t[i-1]==0 && x[i-1]==2 && t[i]==1 && x[i]==2 --> t[i]:=1; x[i]:=0; )
    ( t[i-1]==1 && x[i-1]==0 && t[i]==0 && x[i]==0 --> t[i]:=0; x[i]:=1; )
    ( t[i-1]==1 && x[i-1]==0 && t[i]==1 && x[i]==0 --> t[i]:=0; x[i]:=2; )
    ( t[i-1]==1 && x[i-1]==0 && t[i]==1 && x[i]==1 --> t[i]:=0; x[i]:=1; )
    ( t[i-1]==1 && x[i-1]==1 && t[i]==0 && x[i]==0 --> t[i]:=0; x[i]:=1; )
    ( t[i-1]==1 && x[i-1]==1 && t[i]==1 && x[i]==0 --> t[i]:=1; x[i]:=2; )
    ( t[i-1]==1 && x[i-1]==1 && t[i]==1 && x[i]==1 --> t[i]:=0; x[i]:=1; )
    ( t[i-1]==1 && x[i-1]==2 && t[i]==0 && x[i]==0 --> t[i]:=0; x[i]:=2; )
    ( t[i-1]==1 && x[i-1]==2 && t[i]==0 && x[i]==1 --> t[i]:=0; x[i]:=2; )
    ( t[i-1]==1 && x[i-1]==2 && t[i]==1 && x[i]==2 --> t[i]:=0; x[i]:=2; )
    ;
}
process P[j <- Nat % (N-1)]
{
  let i := j+1;
  read: t[i-1];
  read: x[i-1];
  write: t[i];
  write: x[i];
  shadow action:
    ( t[i-1]!=t[i] --> t[i]:=t[i-1]; )
    ;
  puppet action:
    ( t[i-1]==0 && x[i-1]==0 && t[i]==0 && x[i]==0 --> t[i]:=0; x[i]:=1; )
    ( t[i-1]==0 && x[i-1]==0 && t[i]==0 && x[i]==2 --> t[i]:=0; x[i]:=1; )
    ( t[i-1]==0 && x[i-1]==0 && t[i]==1 && x[i]==2 --> t[i]:=1; x[i]:=0; )
    ( t[i-1]==0 && x[i-1]==1 && t[i]==0 && x[i]==0 --> t[i]:=0; x[i]:=1; )
    ( t[i-1]==0 && x[i-1]==1 && t[i]==0 && x[i]==2 --> t[i]:=0; x[i]:=1; )
    ( t[i-1]==0 && x[i-1]==1 && t[i]==1 && x[i]==0 --> t[i]:=0; x[i]:=1; )
    ( t[i-1]==0 && x[i-1]==1 && t[i]==1 && x[i]==1 --> t[i]:=0; x[i]:=1; )
    ( t[i-1]==0 && x[i-1]==1 && t[i]==1 && x[i]==2 --> t[i]:=0; x[i]:=1; )
    ( t[i-1]==0 && x[i-1]==2 && t[i]==0 && x[i]==0 --> t[i]:=0; x[i]:=2; )
    ( t[i-1]==0 && x[i-1]==2 && t[i]==0 && x[i]==1 --> t[i]:=0; x[i]:=2; )
    ( t[i-1]==0 && x[i-1]==2 && t[i]==1 && x[i]==0 --> t[i]:=0; x[i]:=2; )
    ( t[i-1]==0 && x[i-1]==2 && t[i]==1 && x[i]==1 --> t[i]:=0; x[i]:=2; )
    ( t[i-1]==0 && x[i-1]==2 && t[i]==1 && x[i]==2 --> t[i]:=0; x[i]:=2; )
    ( t[i-1]==1 && x[i-1]==0 && t[i]==0 && x[i]==0 --> t[i]:=1; x[i]:=0; )
    ( t[i-1]==1 && x[i-1]==0 && t[i]==0 && x[i]==1 --> t[i]:=1; x[i]:=1; )
    ( t[i-1]==1 && x[i-1]==0 && t[i]==0 && x[i]==2 --> t[i]:=1; x[i]:=1; )
    ( t[i-1]==1 && x[i-1]==0 && t[i]==1 && x[i]==2 --> t[i]:=1; x[i]:=1; )
    ( t[i-1]==1 && x[i-1]==1 && t[i]==0 && x[i]==2 --> t[i]:=0; x[i]:=0; )
    ( t[i-1]==1 && x[i-1]==1 && t[i]==1 && x[i]==2 --> t[i]:=1; x[i]:=0; )
    ( t[i-1]==1 && x[i-1]==2 && t[i]==0 && x[i]==0 --> t[i]:=1; x[i]:=2; )
    ( t[i-1]==1 && x[i-1]==2 && t[i]==0 && x[i]==1 --> t[i]:=0; x[i]:=2; )
    ( t[i-1]==1 && x[i-1]==2 && t[i]==1 && x[i]==0 --> t[i]:=1; x[i]:=2; )
    ( t[i-1]==1 && x[i-1]==2 && t[i]==1 && x[i]==1 --> t[i]:=1; x[i]:=2; )
    ;
}

// One process has the token.
direct invariant:
  (unique i <- Nat % N :
   i == 0 && t[i-1] == t[i]
   ||
   i != 0 && t[i-1] != t[i]
  );

