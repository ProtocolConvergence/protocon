
// Ring orientation protocol using the state-reading model defined in
// Title: Uniform Deterministic Self-Stabilizing Ring-Orientation on Odd-Length Rings
// Author: Jaap-Henk Hoepman
// Year: 1994

constant N := 3;

puppet variable color[N] < 2;
puppet variable phase[N] < 2;
direct variable way[(2*N)] < 2;

// Eventually, all processes are pointing in the same direction.
((future & shadow) % puppet)
  (forall i < N :
   way[2*i] == way[2*(i+1)]
  );

process P[i < N]
{
  symmetric (hand_idx, j)  <- {# (2*i, i-1), (2*i+1, i+1) #}
  {
    write: way[hand_idx];
    read: color[j], phase[j];
  }
  write: color[i], phase[i];

  // Assume that some direction is chosen at all times.
  (assume & closed)
    (way[2*i] != way[2*i+1]);

  // Actions a,b,c,d from the paper
  puppet action:
    ( color[i-1]==color[i+1] && (color[i]==color[i-1] || phase[i]==1)
     -->
      color[i]:=1-color[i-1];
      phase[i]:=0;
    );

  // Actions e,f from the paper
  puppet action:
    (    color[i-1]==color[i] && color[i]!=color[i+1] && phase[i-1]==1 && phase[i]==0 && phase[i+1]==0
      || color[i+1]==color[i] && color[i]!=color[i-1] && phase[i+1]==1 && phase[i]==0 && phase[i-1]==0
     -->
      color[i] := 1-color[i];
      phase[i] := 1;
      way[2*i] := phase[i-1];
      way[2*i+1] := phase[i+1];
    );

  // Actions g,h,i,j from the paper
  puppet action:
    (    color[i-1]==color[i] && phase[i-1]==phase[i] && color[i]!=color[i+1]
      || color[i+1]==color[i] && phase[i+1]==phase[i] && color[i]!=color[i-1]
     -->
      phase[i] := 1-phase[i];
    );
}

