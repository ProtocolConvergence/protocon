
constant N := 3;

puppet variable e[Nat % N] <- Nat % 2;
direct variable t[Nat % N] <- Nat % 2;
random variable dec[Nat % N] <- Nat % 2;

// Ensure that N is odd.
(assume & closed)
  (N % 2 == 1);

(future & shadow)
  (unique i <- Nat % N : t[i-1]==t[i]);

process P[i <- Nat % N]
{
  read: e[i-1];
  write: e[i];

  read: t[i-1];
  write: t[i];

  // This variable is randomized when ANY process acts.
  read: dec[i];

  shadow: ( t[i-1]==t[i] --> t[i]:=1-t[i]; );

  puppet: ( e[i-1]==e[i] && t[i-1]==t[i] --> e[i]:=1-e[i]; t[i]:=dec[i]; );
  puppet: ( e[i-1]==e[i] && t[i-1]!=t[i] --> e[i]:=1-e[i]; );
}

