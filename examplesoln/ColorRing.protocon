
constant N := 5;
variable x[Nat % N] <- Nat % 3;
process P[i <- Nat % N]
{
  read: x[i-1];
  write: x[i];
  read: x[i+1];

  (future & shadow)
    (x[i-1]!=x[i] && x[i]!=x[i+1]);

  puppet action:
    ( x[i-1]==0 && x[i]!=1 && x[i+1]==2 --> x[i]:=1; )
    ( x[i-1]!=0 && x[i]==2 && x[i+1]==2 --> x[i]:=0; )
    ( x[i-1]==2 && x[i]==1 && x[i+1]==1 --> x[i]:=0; )
    ( x[i-1]!=2 && x[i]==x[i-1] && x[i+1]!=2 --> x[i]:=2; )
    ( x[i-1]!=2 && x[i]==x[i+1] && x[i+1]!=2 --> x[i]:=2; )
    ;

  // The first and third actions above can be replaced the following:
  //( x[i-1]!=1 && x[i]==x[i+1] && x[i+1]!=1 --> x[i]:=1; )
  // But it introduces nondeterminism. It does seem to verify faster though.
}

