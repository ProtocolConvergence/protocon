
// Ring orientation protocol using links between processesses defined in
// Title: Uniform Deterministic Self-Stabilizing Ring-Orientation on Odd-Length Rings
// Author: Jaap-Henk Hoepman
// Year: 1994

// Note that this can only work for rings of odd size.

constant N := 3;

puppet variable youare[(2*N)] < 2;
direct variable dir[(2*N)] < 2;
puppet variable ord[(2*N)] < 2;
puppet variable parity[(2*N)] < 2;

process P[q < N]
{
  let p := (q-1) % N;
  let r := (q+1) % N;

  let qp := 2*q+0;
  let qr := 2*q+1;

  let pq := 2*p+1;
  let rq := 2*r+0;

  symmetric (ij, ji) <- {# (qp, pq), (qr, rq) #}
  {
    read:  youare[ji], dir[ji], ord[ji], parity[ji];
    write: youare[ij], dir[ij], ord[ij], parity[ij];
  }

  // Actions from paper, labeled by letter.

  // a
  (closed & assume)
    (youare[qp] != youare[qr]);

  puppet action:
  // b
    ( dir[pq]==dir[qp] && parity[qp]!=0 --> parity[qp]:=0; )
  // c
    ( youare[qr]< youare[rq] && dir[qr]!=dir[rq] && parity[qp]==parity[rq] --> parity[qp]:=parity[rq]+1; )
  // d
    ( youare[qr]>=youare[rq] && dir[qr]!=dir[rq] && parity[qp]!=parity[rq] --> parity[qp]:=parity[rq]; )
  // e
    ( dir[qr]==dir[rq] && ord[qp]!=0--> ord[qp]:=0; )
    ( dir[qr]==dir[rq] && ord[qp]!=1--> ord[qp]:=1; )
  // f1
    ( dir[pq]==dir[qp] && youare[pq]< youare[qp] --> dir[qp]:=1-dir[qp]; )
  // f2
    ( dir[pq]==dir[qp] && youare[pq]==youare[qp] && dir[qr]!=dir[rq] && ord[pq]==0 --> dir[qp]:=1-dir[qp]; )
  // f3
    ( dir[pq]==dir[qp] && youare[pq]==youare[qp] && dir[qr]!=dir[rq] && ord[pq]==1 && parity[qp]==1 --> dir[qp]:=1-dir[qp]; )
    ;
}

// Eventually, all processes are pointing in the same direction.
((future & shadow) % puppet)
(
  (forall i < N : dir[2*i]==1 && dir[2*i+1]==0)
  ||
  (forall i < N : dir[2*i]==0 && dir[2*i+1]==1)
);

