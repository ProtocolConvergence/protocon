
// Token-passing around a ring
// using 6 states per process.
// (Proof-of-concept, not pretty!!)
// Verified up to N=25

constant N := 3;
constant M := 3;

variable t[Nat % N] <- Nat % 2;
variable x[Nat % N] <- Nat % M;

process Bot[i <- Nat % 1]
{
  read: t[i-1];
  read: x[i-1];
  write: t[i];
  write: x[i];
  direct action:
    ( t[i-1]==0 && x[i-1]==0 && t[i]==0 && x[i]==0 --> t[i]:=0; x[i]:=2; )
    ( t[i-1]==0 && x[i-1]==0 && t[i]==1 && x[i]==0 --> t[i]:=1; x[i]:=2; )
    ( t[i-1]==0 && x[i-1]==0 && t[i]==1 && x[i]==1 --> t[i]:=1; x[i]:=2; )
    ( t[i-1]==0 && x[i-1]==1 && t[i]==0 && x[i]==0 --> t[i]:=0; x[i]:=2; )
    ( t[i-1]==0 && x[i-1]==1 && t[i]==0 && x[i]==1 --> t[i]:=1; x[i]:=2; )
    ( t[i-1]==0 && x[i-1]==1 && t[i]==1 && x[i]==0 --> t[i]:=1; x[i]:=2; )
    ( t[i-1]==0 && x[i-1]==1 && t[i]==1 && x[i]==1 --> t[i]:=1; x[i]:=2; )
    ( t[i-1]==0 && x[i-1]==2 && t[i]==0 && x[i]==0 --> t[i]:=1; x[i]:=0; )
    ( t[i-1]==0 && x[i-1]==2 && t[i]==0 && x[i]==1 --> t[i]:=1; x[i]:=1; )
    ( t[i-1]==0 && x[i-1]==2 && t[i]==0 && x[i]==2 --> t[i]:=1; x[i]:=0; )
    ( t[i-1]==0 && x[i-1]==2 && t[i]==1 && x[i]==2 --> t[i]:=1; x[i]:=0; )
    ( t[i-1]==1 && x[i-1]==0 && t[i]==0 && x[i]==0 --> t[i]:=0; x[i]:=1; )
    ( t[i-1]==1 && x[i-1]==0 && t[i]==1 && x[i]==0 --> t[i]:=0; x[i]:=2; )
    ( t[i-1]==1 && x[i-1]==0 && t[i]==1 && x[i]==1 --> t[i]:=0; x[i]:=1; )
    ( t[i-1]==1 && x[i-1]==1 && t[i]==0 && x[i]==0 --> t[i]:=0; x[i]:=1; )
    ( t[i-1]==1 && x[i-1]==1 && t[i]==1 && x[i]==0 --> t[i]:=1; x[i]:=2; )
    ( t[i-1]==1 && x[i-1]==1 && t[i]==1 && x[i]==1 --> t[i]:=0; x[i]:=1; )
    ( t[i-1]==1 && x[i-1]==2 && t[i]==0 && x[i]==0 --> t[i]:=0; x[i]:=2; )
    ( t[i-1]==1 && x[i-1]==2 && t[i]==0 && x[i]==1 --> t[i]:=0; x[i]:=2; )
    ( t[i-1]==1 && x[i-1]==2 && t[i]==1 && x[i]==2 --> t[i]:=0; x[i]:=2; )
    ;
}
process P[j <- Nat % (N-1)]
{
  let i := j+1;
  read: t[i-1];
  read: x[i-1];
  write: t[i];
  write: x[i];
  direct action:
    ( t[i-1]==0 && x[i-1]==0 && t[i]==0 && x[i]==0 --> t[i]:=0; x[i]:=1; )
    ( t[i-1]==0 && x[i-1]==0 && t[i]==0 && x[i]==2 --> t[i]:=0; x[i]:=1; )
    ( t[i-1]==0 && x[i-1]==0 && t[i]==1 && x[i]==2 --> t[i]:=1; x[i]:=0; )
    ( t[i-1]==0 && x[i-1]==1 && t[i]==0 && x[i]==0 --> t[i]:=0; x[i]:=1; )
    ( t[i-1]==0 && x[i-1]==1 && t[i]==0 && x[i]==2 --> t[i]:=0; x[i]:=1; )
    ( t[i-1]==0 && x[i-1]==1 && t[i]==1 && x[i]==0 --> t[i]:=0; x[i]:=1; )
    ( t[i-1]==0 && x[i-1]==1 && t[i]==1 && x[i]==1 --> t[i]:=0; x[i]:=1; )
    ( t[i-1]==0 && x[i-1]==1 && t[i]==1 && x[i]==2 --> t[i]:=0; x[i]:=1; )
    ( t[i-1]==0 && x[i-1]==2 && t[i]==0 && x[i]==0 --> t[i]:=0; x[i]:=2; )
    ( t[i-1]==0 && x[i-1]==2 && t[i]==0 && x[i]==1 --> t[i]:=0; x[i]:=2; )
    ( t[i-1]==0 && x[i-1]==2 && t[i]==1 && x[i]==0 --> t[i]:=0; x[i]:=2; )
    ( t[i-1]==0 && x[i-1]==2 && t[i]==1 && x[i]==1 --> t[i]:=0; x[i]:=2; )
    ( t[i-1]==0 && x[i-1]==2 && t[i]==1 && x[i]==2 --> t[i]:=0; x[i]:=2; )
    ( t[i-1]==1 && x[i-1]==0 && t[i]==0 && x[i]==0 --> t[i]:=1; x[i]:=0; )
    ( t[i-1]==1 && x[i-1]==0 && t[i]==0 && x[i]==1 --> t[i]:=1; x[i]:=1; )
    ( t[i-1]==1 && x[i-1]==0 && t[i]==0 && x[i]==2 --> t[i]:=1; x[i]:=1; )
    ( t[i-1]==1 && x[i-1]==0 && t[i]==1 && x[i]==2 --> t[i]:=1; x[i]:=1; )
    ( t[i-1]==1 && x[i-1]==1 && t[i]==0 && x[i]==2 --> t[i]:=0; x[i]:=0; )
    ( t[i-1]==1 && x[i-1]==1 && t[i]==1 && x[i]==2 --> t[i]:=1; x[i]:=0; )
    ( t[i-1]==1 && x[i-1]==2 && t[i]==0 && x[i]==0 --> t[i]:=1; x[i]:=2; )
    ( t[i-1]==1 && x[i-1]==2 && t[i]==0 && x[i]==1 --> t[i]:=0; x[i]:=2; )
    ( t[i-1]==1 && x[i-1]==2 && t[i]==1 && x[i]==0 --> t[i]:=1; x[i]:=2; )
    ( t[i-1]==1 && x[i-1]==2 && t[i]==1 && x[i]==1 --> t[i]:=1; x[i]:=2; )
    ;
}

// One process is enabled to act.
// The "active shadow" ensures that the protocol is live.
(future & active shadow)
  (unique i <- Nat % N :
   i==0 &&
   (false
    || t[i-1]==0 && x[i-1]==0 && t[i]==0 && x[i]==0
    || t[i-1]==0 && x[i-1]==0 && t[i]==1 && x[i]==0
    || t[i-1]==0 && x[i-1]==0 && t[i]==1 && x[i]==1
    || t[i-1]==0 && x[i-1]==1 && t[i]==0 && x[i]==0
    || t[i-1]==0 && x[i-1]==1 && t[i]==0 && x[i]==1
    || t[i-1]==0 && x[i-1]==1 && t[i]==1 && x[i]==0
    || t[i-1]==0 && x[i-1]==1 && t[i]==1 && x[i]==1
    || t[i-1]==0 && x[i-1]==2 && t[i]==0 && x[i]==0
    || t[i-1]==0 && x[i-1]==2 && t[i]==0 && x[i]==1
    || t[i-1]==0 && x[i-1]==2 && t[i]==0 && x[i]==2
    || t[i-1]==0 && x[i-1]==2 && t[i]==1 && x[i]==2
    || t[i-1]==1 && x[i-1]==0 && t[i]==0 && x[i]==0
    || t[i-1]==1 && x[i-1]==0 && t[i]==1 && x[i]==0
    || t[i-1]==1 && x[i-1]==0 && t[i]==1 && x[i]==1
    || t[i-1]==1 && x[i-1]==1 && t[i]==0 && x[i]==0
    || t[i-1]==1 && x[i-1]==1 && t[i]==1 && x[i]==0
    || t[i-1]==1 && x[i-1]==1 && t[i]==1 && x[i]==1
    || t[i-1]==1 && x[i-1]==2 && t[i]==0 && x[i]==0
    || t[i-1]==1 && x[i-1]==2 && t[i]==0 && x[i]==1
    || t[i-1]==1 && x[i-1]==2 && t[i]==1 && x[i]==2
   )
   ||
   i!=0 &&
   (false
    || t[i-1]==0 && x[i-1]==0 && t[i]==0 && x[i]==0
    || t[i-1]==0 && x[i-1]==0 && t[i]==0 && x[i]==2
    || t[i-1]==0 && x[i-1]==0 && t[i]==1 && x[i]==2
    || t[i-1]==0 && x[i-1]==1 && t[i]==0 && x[i]==0
    || t[i-1]==0 && x[i-1]==1 && t[i]==0 && x[i]==2
    || t[i-1]==0 && x[i-1]==1 && t[i]==1 && x[i]==0
    || t[i-1]==0 && x[i-1]==1 && t[i]==1 && x[i]==1
    || t[i-1]==0 && x[i-1]==1 && t[i]==1 && x[i]==2
    || t[i-1]==0 && x[i-1]==2 && t[i]==0 && x[i]==0
    || t[i-1]==0 && x[i-1]==2 && t[i]==0 && x[i]==1
    || t[i-1]==0 && x[i-1]==2 && t[i]==1 && x[i]==0
    || t[i-1]==0 && x[i-1]==2 && t[i]==1 && x[i]==1
    || t[i-1]==0 && x[i-1]==2 && t[i]==1 && x[i]==2
    || t[i-1]==1 && x[i-1]==0 && t[i]==0 && x[i]==0
    || t[i-1]==1 && x[i-1]==0 && t[i]==0 && x[i]==1
    || t[i-1]==1 && x[i-1]==0 && t[i]==0 && x[i]==2
    || t[i-1]==1 && x[i-1]==0 && t[i]==1 && x[i]==2
    || t[i-1]==1 && x[i-1]==1 && t[i]==0 && x[i]==2
    || t[i-1]==1 && x[i-1]==1 && t[i]==1 && x[i]==2
    || t[i-1]==1 && x[i-1]==2 && t[i]==0 && x[i]==0
    || t[i-1]==1 && x[i-1]==2 && t[i]==0 && x[i]==1
    || t[i-1]==1 && x[i-1]==2 && t[i]==1 && x[i]==0
    || t[i-1]==1 && x[i-1]==2 && t[i]==1 && x[i]==1
   )
  );

