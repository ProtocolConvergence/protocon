
constant N := 3;

constant L := 0;
constant S := 1;
constant R := 2;

puppet variable x[N] < 2;
direct variable m[N] < 3;

// The following cases are P[i] pointing
// to P[i-1], itself, or P[i+1] respectively.
((future & silent) % puppet)
  (forall i < N :
      m[i-1]==R && m[i]==L
   || m[i-1]==L && m[i]==S && m[i+1]==R
   ||              m[i]==R && m[i+1]==L
  );

process P[i < N]
{
  read: x[i-1];
  write: x[i];
  read: x[i+1];
  write: m[i];

  puppet action:
    ( x[i-1]==1 && x[i]==1 && x[i+1]==1 --> x[i]:=0; m[i]:=L; )
    ( x[i-1]==0 && x[i]==1 && x[i+1]==1 --> x[i]:=0; m[i]:=S; )
    ( x[i-1]==0 && x[i]==0 && x[i+1]==0 --> x[i]:=1; m[i]:=R; )

    ( x[i-1]==1 && x[i]==0              && m[i]!=L --> m[i]:=L; )
    ( x[i-1]==0 && x[i]==0 && x[i+1]==1 && m[i]!=S --> m[i]:=S; )
    ( x[i-1]==0 && x[i]==1 && x[i+1]==0 && m[i]!=R --> m[i]:=R; )
    ;
}


