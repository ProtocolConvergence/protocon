
constant N := 4;

puppet variable x[Int % N] <- Int % 2;
shadow variable m[Int % N] <- Int % 3;

// The following cases are P[i] pointing
// to P[i-1], itself, or P[i+1] respectively.
((future & silent) % puppet)
  (forall i <- Int % N :
      m[i-1] == 2 && m[i] == 0
   || m[i-1] == 0 && m[i] == 1 && m[i+1] == 2
   ||                m[i] == 2 && m[i+1] == 0
  );

process P[i <- Int % N]
{
  read: x[i-1];
  write: x[i];
  read: x[i+1];
  write: m[i];

  puppet action:
    ( x[i-1]==1 && x[i]==1 && x[i+1]==1 --> x[i]:=0; m[i]:=0; )
    ( x[i-1]==0 && x[i]==1 && x[i+1]==1 --> x[i]:=0; m[i]:=1; )
    ( x[i-1]==0 && x[i]==0 && x[i+1]==0 --> x[i]:=1; m[i]:=2; )

    ( x[i-1]==1 && x[i]==0              --> m[i]:=0; )
    ( x[i-1]==0 && x[i]==0 && x[i+1]==1 --> m[i]:=1; )
    ( x[i-1]==0 && x[i]==1 && x[i+1]==0 --> m[i]:=2; )
    ;
}


