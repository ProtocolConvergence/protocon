
// Token ring adapted from examplesoln/TokenRingSixState.prot.

constant N := 3;
constant M := 6;

shadow variable tok[Int % N] <- Int % 2;
puppet variable x[Int % N] <- Int % M;

// There exists one token in the ring.
// Also, every action should pass a token (see shadow actions below).
((future & active shadow) % puppet)
  (unique i <- Int % N : tok[i]==1);

process Bot[i <- Int % 1]
{
  read:  x[i-1];
  write: x[i];

  write: tok[i];
  write: tok[i+1];

  shadow action:
    ( tok[i]==1 --> tok[i]:=0; tok[i+1]:=1; );

  puppet action:
    ( x[i-1]==0 && x[i]==0 --> x[i]:=2; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==1 && x[i]==0 --> x[i]:=2; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==2 && x[i]==0 --> x[i]:=3; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==3 && x[i]==0 --> x[i]:=1; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==4 && x[i]==0 --> x[i]:=1; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==5 && x[i]==0 --> x[i]:=2; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==1 && x[i]==1 --> x[i]:=5; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==2 && x[i]==1 --> x[i]:=4; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==5 && x[i]==1 --> x[i]:=2; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==2 && x[i]==2 --> x[i]:=3; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==0 && x[i]==3 --> x[i]:=5; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==1 && x[i]==3 --> x[i]:=5; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==3 && x[i]==3 --> x[i]:=2; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==4 && x[i]==3 --> x[i]:=5; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==0 && x[i]==4 --> x[i]:=5; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==1 && x[i]==4 --> x[i]:=5; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==3 && x[i]==4 --> x[i]:=1; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==4 && x[i]==4 --> x[i]:=1; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==2 && x[i]==5 --> x[i]:=3; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==5 && x[i]==5 --> x[i]:=2; tok[i]:=0; tok[i+1]:=1; )
    ;
}

process P[j <- Int % (N-1)]
{
  let i := j+1;

  read:  x[i-1];
  write: x[i];

  write: tok[i];
  write: tok[i+1];

  shadow action:
    ( tok[i]==1 --> tok[i]:=0; tok[i+1]:=1; );

  puppet action:
    ( x[i-1]==0 && x[i]==0 --> x[i]:=1; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==1 && x[i]==0 --> x[i]:=1; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==2 && x[i]==0 --> x[i]:=2; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==3 && x[i]==0 --> x[i]:=3; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==5 && x[i]==0 --> x[i]:=5; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==2 && x[i]==1 --> x[i]:=2; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==3 && x[i]==1 --> x[i]:=4; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==5 && x[i]==1 --> x[i]:=2; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==0 && x[i]==2 --> x[i]:=1; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==1 && x[i]==2 --> x[i]:=1; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==3 && x[i]==2 --> x[i]:=4; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==4 && x[i]==2 --> x[i]:=0; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==1 && x[i]==3 --> x[i]:=1; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==2 && x[i]==3 --> x[i]:=2; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==5 && x[i]==3 --> x[i]:=5; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==1 && x[i]==4 --> x[i]:=1; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==2 && x[i]==4 --> x[i]:=2; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==5 && x[i]==4 --> x[i]:=5; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==0 && x[i]==5 --> x[i]:=3; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==1 && x[i]==5 --> x[i]:=1; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==2 && x[i]==5 --> x[i]:=2; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==3 && x[i]==5 --> x[i]:=4; tok[i]:=0; tok[i+1]:=1; )
    ( x[i-1]==4 && x[i]==5 --> x[i]:=3; tok[i]:=0; tok[i+1]:=1; )
    ;
}

