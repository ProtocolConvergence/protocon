
# Published example: Fictional "A-b-C" protocol with a livelock
# Title: Verifying Livelock Freedom on Parameterized Rings and Chains
# Author: Alex P. Klinkhamer and Ali Ebnenasir
# Year: 2013
(: ppgfun Str """
 0 10  3  (a0,c1,a3)  Only the first 3 numbers of each line are read.
 0 12  1  (a0,c3,a1)  Consider the (x,y,z) tuples afterward as comments.
 1 13  2  (a1,c4,a2)
 2  9  0  (a2,c0,a0)
 3 11  2  (a3,c2,a2)

 4  0  6  (b0,a0,b2)
 4  1  5  (b0,a1,b1)
 5  2  4  (b1,a2,b0)
 6  3  7  (b2,a3,b3)
 7  2  8  (b3,a2,b4)
 8  0  4  (b4,a0,b0)

 9  5 10  (c0,b1,c1)
 9  7 12  (c0,b3,c3)
10  4 11  (c1,b0,c2)
11  6  9  (c2,b2,c0)
12  8 13  (c3,b4,c4)
12  8 13  (c3,b4,c4)
13  4  9  (c4,b0,c0)
""")

zec -o $(OF expect) / "livelock\tperiod:6\n" /

|< zec / "${ppgfun}" /
|- xlate -x-list - -o-id -
|- classify 6 -domsz 14
|- cmp - $(XF expect)
|> stderr

$(barrier)

# Start with a sstep just to get a newline.
(: interactive_input_content Str """
show-newline
assign x[0]:=0; x[1]:=1; x[2]:=2;
assign x[3]:=0; x[4]:=3; x[5]:=2;
assign x[6]:=0; x[7]:=12; x[8]=8;
sstep quiet 6
show-state
exit
""")

(: expect_output_content Str """
x[0]==0
x[1]==3
x[2]==2
x[3]==0
x[4]==12
x[5]==8
x[6]==0
x[7]==1
x[8]==2

""")
zec -o $(OF expect) / "${expect_output_content}" /

|< zec / "${ppgfun}" /
|- xlate -x-list - -o-prot -
|> protocon -nop -def N 9 -x - -o $(OF protocon_file)

|< zec / "${interactive_input_content}" /
|- protocon -interactive -x $(XF protocon_file)
|- cmp - $(XF expect)
|> stderr

$(barrier)

|< zec / "${ppgfun}" /
|- xlate -x-list - -cutoff 6 -o-svg-livelock $(OF void)
|> stderr

void $(X void)
