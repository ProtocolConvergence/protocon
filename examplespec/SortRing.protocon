
constant N := 4;
constant M := N;
//constant M := 5;

variable x[Nat % N] <- Nat % M;

process P[i <- Nat % N]
{
  write: x[i];
  write: x[i+1];

  permit:
    ( 1==1 --> x[i]:=x[i+1]; x[i+1]:=x[i]; )
    ;

  //permit:
  //  ( 1==1 --> x[i]:=x[i+1]; x[i+1]:=_; )
  //  ( 1==1 --> x[i+1]:=x[i]; x[i]:=_; )
  //  ;
}

(assume & closed)
  (forall i <- Nat % N :
   (unique j <- Nat % N :
    x[i] == x[j]));


(future & closed)
  (forall i <- Nat % N :
   (x[i]+1) % N == x[i+1]);

//(future & closed)
//  (exists off <- Nat % N :
//   (forall i <- Nat % N :
//    x[off+i] <= x[off+i+1]));

//(future & closed)
//  (forall i <- Nat % (N-1) :
//   x[i] <= x[i+1]);

