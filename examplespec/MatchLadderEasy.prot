
// Mark all "rung" edges of a ladder topology with a 1 bit
// and mark the other edges with 0.

constant N := 3;
constant M := 4;
constant E := N + 2*(N-1);

variable e[E] < 2;

process P[i < (2*N-4)]
{
  let ac := 3*(i/2+1);
  let pd := (i % 2) + ac-2;
  let sc := (i % 2) + ac+1;

  write: e[pd];
  write: e[ac];
  write: e[sc];
  //puppet action:
  //  ( e[pd]!=0 || e[ac]!=1 || e[sc]!=0 --> e[pd]:=0; e[ac]:=1; e[sc]:=0; )
  //  ;
}

process End[i < 4]
{
  let ac := if (i < 2) then (0) else (E-1);
  let sc := (i % 2) + (if (i < 2) then (ac+1) else (ac-2));
  write: e[ac];
  write: e[sc];
  //puppet action:
  //  ( e[ac]!=1 || e[sc]!=0 --> e[ac]:=1; e[sc]:=0; )
  //  ;
}

(future & silent)
(
  (forall i < N : e[3*i] == 1)
  &&
  (forall i < (N-1) : e[3*i+1] == 0)
  &&
  (forall i < (N-1) : e[3*i+2] == 0)
);

