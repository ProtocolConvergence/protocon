
// 3-coloring protocol
// We want no two adjacent colors to be the same.

constant N := 3;

variable x[N] < 3;

process P[i < N]
{
  // Declare read and write access to variables corresponding to
  // P[i]'s links with P[i-1] and P[i+1] such that P[i] would
  // behave no differently if the links were swapped.
  // That is, an action
  //   ( x[i-1]==a && x[i+1]==b && x[i]==c --> x[i]:=d; )
  // exists if and only if the action
  //   ( x[i-1]==b && x[i+1]==a && x[i]==c --> x[i]:=d; )
  // also exists.
  symmetric j <- {# i-1, i+1 #}
  {
    read: x[j];
  }
  write: x[i];

  (future & silent)
    (x[i-1]!=x[i] && x[i]!=x[i+1]);
}

