
// This is a way to specify a token ring without using pure shadow
// variables. Rather, a non-stabilizing 1-bit token ring on the t[i]
// variables is used to define the invariant and behavior.

constant N := 3;
constant M := 3;

puppet variable x[Nat % N] <- Nat % M;
direct variable t[Nat % N] <- Nat % 2;

(future & shadow)
  // One process has the token.
  (unique i <- Nat % N :
   i == 0 && t[i-1] == t[i]
   ||
   i != 0 && t[i-1] != t[i]
  );

process Bot[i <- Nat % 1]
{
  read: x[i-1];  write: x[i];
  read: t[i-1];  write: t[i];
  shadow action: ( t[i-1] == t[i] --> t[i] := 1 - t[i-1]; );
}

process P[i <- 1 + Nat % (N-1)]
{
  read: x[i-1];  write: x[i];
  read: t[i-1];  write: t[i];
  shadow action: ( t[i-1] != t[i] --> t[i] := t[i-1]; );
}

