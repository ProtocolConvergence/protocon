
// Dijkstra's self-stabilizing token ring.
// But without the stabilizing actions.

constant N := 5;
constant M := N;

variable x[Nat % N] <- Nat % M;

process Bot[i <- Nat % 1]
{
  read:  x[i-1];
  write: x[i];
  // Actions in the legitimate states:
  direct action: ( x[i-1] == x[i] --> x[i] := x[i] + 1; );

  // Conjunct this into the invariant:
  (future & shadow)
    (x[i-1] == x[i] || x[i-1] == (x[i] - 1) % M);
}

process P[j <- Nat % (N-1)]
{
  let i := j+1;
  read:  x[i-1];
  write: x[i];
  // Actions in the legitimate states:
  direct action: ( x[i-1] == (x[i] + 1) % M --> x[i] := x[i] + 1; );

  // Conjunct this into the invariant:
  (future & shadow)
    (x[i-1] == (x[i] + 1) % M || x[i-1] == x[i]);
}

(future & shadow)
  (unique i <- Nat % N :
   (i == 0 && x[i-1] == x[i]
    ||
    i != 0 && x[i-1] == (x[i] + 1) % M
   )
  )
  ;

