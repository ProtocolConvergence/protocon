
// Ring orientation using the state-reading model.
// See examplesoln/OrientRingOdd.prot for the stabilizing version.

constant N := 3;

puppet variable color[N] < 2;
puppet variable phase[N] < 2;
direct variable way[(2*N)] < 2;

// Eventually, all processes are pointing in the same direction.
((future & shadow) % puppet)
  (forall i < N :
   way[2*i] == way[2*(i+1)]
  );

process P[i < N]
{
  symmetric (hand_idx, j)  <- {# (2*i, i-1), (2*i+1, i+1) #}
  {
    write: way[hand_idx];
    read: color[j], phase[j];
  }
  write: color[i], phase[i];

  // Assume that some direction is chosen at all times.
  (assume & closed)
    (way[2*i] != way[2*i+1]);
}

