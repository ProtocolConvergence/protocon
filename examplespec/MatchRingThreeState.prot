
// Matching ring protocol.
// Each process has a variable whose value represents a direction.
//  m[i] == 0  means P[i] is pointing to P[i-1].
//  m[i] == 1  means P[i] is pointing to itself.
//  m[i] == 2  means P[i] is pointing to P[i+1].
// Our goal is to end up in a state where processes are pointing to each other
// or, if both P[i-1] and P[i+1] are pointing away from P[i], then P[i] should
// point to itself.

constant N := 3;

constant L := 0;
constant S := 1;
constant R := 2;

variable m[N] < 3;

process P[i < N]
{
  read:  m[i-1];
  write: m[i];
  read:  m[i+1];

  (future & silent)
    (   m[i-1]==R && m[i]==L
     || m[i-1]==L && m[i]==S && m[i+1]==R
     ||              m[i]==R && m[i+1]==L
    );
}

