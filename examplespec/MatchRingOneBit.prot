
constant N := 4;

puppet variable x[Int % N] <- Int % 2;
shadow variable m[Int % N] <- Int % 3;

process P[i <- Int % N]
{
  read: x[i-1];
  write: x[i];
  read: x[i+1];
  write: m[i];
}


// The following cases are P[i] pointing
// to P[i-1], itself, or P[i+1] respectively.
((future & shadow) % puppet)
  (forall i <- Int % N :
      m[i-1] == 2 && m[i] == 0
   || m[i-1] == 0 && m[i] == 1 && m[i+1] == 2
   ||                m[i] == 2 && m[i+1] == 0
  );

// Actions will eventually cease.
future silent;

