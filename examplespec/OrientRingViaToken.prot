
// Ring orientation
// Title: Uniform Self-Stabilizing Ring Orientation
// Author: Amos Israeli
// Author: Marc Jalfon
// Year: 1993

// Synthesis for this is MUCH TOO DIFFICULT at the moment
// due to the high number of candidate actions!

constant N := 3;

puppet variable c[Nat % N] <- Nat % 3;
puppet variable tok[Nat % N] <- Nat % 3;
direct variable way[Nat % (2*N)] <- Nat % 2;

process P[i <- Nat % N]
{
  symmetric (j, way_idx, adj_way_idx, adj_way_idx_far)
    <- {# (i-1, 2*i, 2*i-1, 2*i-2), (i+1, 2*i+1, 2*i+2, 2*i+3) #}
  {
    read: c[j];
    read: tok[j];
    read: way[adj_way_idx];
    read: way[adj_way_idx_far];
    write: way[way_idx];
  }
  write: c[i];
  write: tok[i];

  (assume & closed)
    (way[2*i] != way[2*i+1]);

  forbid: ( way[2*i-2]==way[2*i-1] --> _; );
  forbid: ( way[2*i+0]==way[2*i+1] --> _; );
  forbid: ( way[2*i+2]==way[2*i+3] --> _; );
}

// Eventually, all processes are pointing in the same direction.
((future & shadow) % puppet)
  (forall i <- Nat % (2*N) : way[i] != way[i-1])
  ;

